# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Grab version
        run: |
          tag_name=$(echo ${{ github.ref }} | grep -oE "[^/]+$")
          echo "VERSION=$tag_name" >> $GITHUB_ENV

      # Runs a single command using the runners shell
      - name: Build
        run: RELEASE=1 ./linux.sh

      - name: Upload amd64 AppImage
        uses: actions/upload-artifact@v4
        with:
          name: "AppImage (amd64)"
          path: artifacts/Ryujinx-${{ env.VERSION }}-amd64.AppImage*

      - name: Upload aarch64 AppImage
        uses: actions/upload-artifact@v4
        with:
          name: "AppImage (aarch64)"
          path: artifacts/Ryujinx-${{ env.VERSION }}-aarch64.AppImage*

  build_win:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Grab version
        run: |
          tag_name=$(echo ${{ github.ref }} | grep -oE "[^/]+$")
          echo "VERSION=$tag_name" >> $GITHUB_ENV

      # Install dependencies
      # - name: Install Dependencies
      #   run: choco install dotnet-9.0-sdk

      # Runs a single command using the runners shell
      - name: Build
        run: .\windows.bat

      - name: Upload amd64 zip
        uses: actions/upload-artifact@v4
        with:
          name: "Windows (amd64)"
          path: artifacts/Ryujinx-Windows-${{ env.VERSION }}-amd64

      - name: Upload aarch64 zip
        uses: actions/upload-artifact@v4
        with:
          name: "Windows (aarch64)"
          path: artifacts/Ryujinx-Windows-${{ env.VERSION }}-aarch64

  build_macos:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Grab version
        run: |
          tag_name=$(echo ${{ github.ref }} | grep -oE "[^/]+$")
          echo "VERSION=$tag_name" >> $GITHUB_ENV

      - name: Install Dependencies
        run: brew install fd # dotnet-sdk

      # Runs a single command using the runners shell
      - name: Build
        run: ./macos.sh

      - name: Upload universal app
        uses: actions/upload-artifact@v4
        with:
          name: "macOS (universal)"
          path: artifacts/
